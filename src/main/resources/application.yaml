spring:
  security:
    oauth2:
      client:
        registration:
          github:
            clientId: 2b4b5f412dfb05a1ad7d
            clientSecret: f74d6f5618a89b48546c8cd9d522bee0dd603130
            scope: user:email
          google:
            clientId: 187667400341-poa0ldtek40tu4vq84n6458msssror7o.apps.googleusercontent.com
            clientSecret: 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
  datasource:
    url: jdbc:postgresql://localhost:5432/oauth2
    username: postgres
    password: postgres
    driver-class-name: org.postgresql.Driver
    #Even if a method is annotated with @Transactional, it will not acquire a connection at the start of the method but
    #only when it needs to hit the database.
    hikari:
      auto-commit: false
  flyway:
    baseline-on-migrate: true
    enabled: true
    user: postgres
    password: postgres
    baseline-description: "init"
    baseline-version: 0
    locations: classpath:db/migration
  mail:
    host: smtp.gmail.com
    port: 587
    username: springbootsandbox@gmail.com
    password: yntwbrvkgwrtsoqn
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
  jackson:
    mapper:
      accept-case-insensitive-enums: true
  jpa:
    open-in-view: false
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  docker:
    compose:
      lifecycle-management: start_only

logging:
  level:
    org:
      springframework:
        security: TRACE
        web: DEBUG
        transaction: TRACE
        orm:
          jpa:
            JpaTransactionManager: TRACE


